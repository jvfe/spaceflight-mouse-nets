// Nextflow configuration
params {
    help = false
    max_cpus = 16
    max_memory = '128.GB'
    max_time = '240.h'
}

trace.overwrite = true

// Enable Docker
docker {
    enabled = true
    runOptions = '-u $(id -u):$(id -g)'
}

// Process configuration
process {
    // Global process configuration
    shell = ['/bin/bash', '-euo', 'pipefail']
    
    // Resource labels
    withLabel: process_low {
        cpus = 2
        memory = 6.GB
        time = 4.h
    }
    
    withLabel: process_medium {
        cpus = 6
        memory = 36.GB
        time = 8.h
    }
    
    withLabel: process_high {
        cpus = 12
        memory = 72.GB
        time = 16.h
    }
    
    // Specific process configurations
    withName: 'STAR_GENOMEGENERATE' {
        cpus = 12
        memory = 72.GB
        time = 8.h
    }
    
    withName: 'STAR_ALIGN' {
        cpus = 12
        memory = 36.GB
        time = 12.h
    }
}

// Execution profiles
profiles {
    docker {
        docker.enabled = true
        conda.enabled = false
        singularity.enabled = false
        wave.strategy = ['docker']
    }
    
    conda {
        conda.enabled = true
        docker.enabled = false
        singularity.enabled = false
        wave.strategy = ['conda']
    }
    
    singularity {
        singularity.enabled = true
        conda.enabled = false
        docker.enabled = false
        wave.strategy = ['singularity']
    }
    
    // Profile for small genomes (e.g., bacterial)
    small_genome {
        process {
            withName: 'STAR_GENOMEGENERATE' {
                cpus = 4
                memory = 8.GB
                time = 1.h
            }
            withName: 'STAR_ALIGN' {
                cpus = 4
                memory = 8.GB
                time = 1.h
            }
        }
    }
    
    // Profile for large genomes (e.g., human)
    large_genome {
        process {
            withName: 'STAR_GENOMEGENERATE' {
                cpus = 16
                memory = 128.GB
                time = 12.h
            }
        }
    }
}

// Generate execution reports
timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline.html"
}

report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report.html"
}

trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_trace.txt"
}

dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_dag.svg"
}
